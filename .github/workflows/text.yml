# 每次 github 提交都会执行

name: Push Text Developer CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  #push:
  #  branches: [ "main" ]   
  #  paths-ignore: ["**/*.txt","**/*.md", "LICENSE", "**/*.xmind", "**/*.doc", "**/*.docx", "**/*.yml", "**/*.ymal"]
  

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:

    strategy:
      matrix:
        configuration: [Debug]

    # The type of runner that the job will run on
    runs-on: windows-latest    
    
    env:
      SolutionName: Action-wpf      
      DefaultVersion: 1.0.0,0

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:     
        #- name: Dump GitHub context
        #  id: github_context_step
        #  run: echo '${{ toJSON(github) }}'
        #- name: Dump job context
        #  run: echo '${{ toJSON(job) }}'
        #- name: Dump steps context
        #  run: echo '${{ toJSON(steps) }}'
        #- name: Dump runner context
        #  run: echo '${{ toJSON(runner) }}'
        #- name: Dump strategy context
        #  run: echo '${{ toJSON(strategy) }}'
        #- name: Dump matrix context
        #  run: echo '${{ toJSON(matrix) }}'
        

        # 获取远程版本文件
        - name: Get Version
          run: Invoke-WebRequest -Uri ${{secrets.VERSION_FILE_URL}} -OutFile ./version.txt
          
        
        # 将正式的版本号写到新的文件中，然后再读取
        - name: Wrire File
          run: $env:DefaultVersion >> PrevVersion.txt

        - name: Wirte Remote Version
          if: ${{$(Get-Content ./version.txt) != null }}
          run: rm -r PrevVersion.txt;$(Get-Content ./version.txt) >> PrevVersion.txt

        - name: Read Version File
          id: PrevVersionFile
          run: echo "::set-output name=content::$(Get-Content ./PrevVersion.txt)"
        
        - name: Get Prev Version
          id: PrevVersion
          if: ${{steps.RemoteVersionFile.outputs.content}} != ${{null}}                  
          run: echo "::set-output name=main::$(({${{steps.PrevVersionFile.outputs.content}}} -split ',')[0])" 
               echo "::set-output name=revision::$(({${{steps.PrevVersionFile.outputs.content}}} -split ',')[1])"

        - name: Get Current Version
          id: CurrentVersion 
          run: echo "::set-output name=main::${{steps.PrevVersion.outputs.main}}" 
               echo "::set-output name=revision::$(${{steps.PrevVersion.outputs.revision}} + 1)" 
          
        - name: echo version
          run: echo "main=${{steps.CurrentVersion.outputs.main}}, revision = ${{steps.CurrentVersion.outputs.revision}}"
        #- name: Check
        #  uses: garygrossgarten/github-action-ssh@release
        #  with:
        #    command: powershell cd /;cd py;python ./check.py c:/pub/version/Action-wpf/developer 7
        #    host: ${{secrets.SSH_HOST}}
        #    port: ${{secrets.SSH_PORT}}
        #    username: ${{secrets.SSH_USER_NAME}}
        #    password : ${{secrets.SSH_USER_PWD}}
            
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      
      
     