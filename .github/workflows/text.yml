# 每次 github 提交都会执行

name: Push Text Developer CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  #push:
  #  branches: [ "main" ]   
  #  paths-ignore: ["**/*.txt","**/*.md", "LICENSE", "**/*.xmind", "**/*.doc", "**/*.docx", "**/*.yml", "**/*.ymal"]
  

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:

    strategy:
      matrix:
        configuration: [Debug]

    # The type of runner that the job will run on
    runs-on: windows-latest    
    
    env:
      SolutionName: Action-wpf
      DefaultVersion: 1.0.0,1

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:     
        #- name: Dump GitHub context
        #  id: github_context_step
        #  run: echo '${{ toJSON(github) }}'
        #- name: Dump job context
        #  run: echo '${{ toJSON(job) }}'
        #- name: Dump steps context
        #  run: echo '${{ toJSON(steps) }}'
        #- name: Dump runner context
        #  run: echo '${{ toJSON(runner) }}'
        #- name: Dump strategy context
        #  run: echo '${{ toJSON(strategy) }}'
        #- name: Dump matrix context
        #  run: echo '${{ toJSON(matrix) }}'
        
        # 获取远程版本文件
        - name: Get Version
          run: Invoke-WebRequest -Uri http://124.223.33.67:16480/version.txt  -OutFile ./version.txt

        - name: Read Version File
          id: RemoteVersionFile
          run: echo "::set-output name=content::$(Get-Content ./version.txt)"
       
        - name: echo version
          run: echo "${{steps.RemoteVersionFile.outputs.content}}"

        - name: Get Remote Version
          id: RemoteVersion
          if: ${{steps.RemoteVersionFile.outputs.content}} != ""                  
          run: echo "::set-output name=main::${{steps.RemoteVersionFile.outputs.content}} -split ','[0]" 
               echo "::set-output name=revision::${{steps.RemoteVersionFile.outputs.content}} -split ','[1]"
          
        
        - name: echo version 
          run: echo " main =${{steps.RemoteVersion.outputs.main}} \n revision =${{steps.RemoteVersion.outputs.revision}}"

            
            
        
       
        
        #- name: executing remote ssh commands using password
        #  uses: appleboy/ssh-action@master
        #  with:
        #    host: "124.223.33.67"
        #    username: "Administrator"
        #    password: "7iQrzu1miQvcdPcC"
        #    port: "8092"
        #    script: powershell ls

        - name: ls -a via ssh
          uses: garygrossgarten/github-action-ssh@release
          with:
            command: powershell cd /pub/version/Action-wpf/developer && (Get-ChildItem).Count
            host: "124.223.33.67"
            port: "8092"
            username: "Administrator"
            password : "7iQrzu1miQvcdPcC"
            
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      
      
     