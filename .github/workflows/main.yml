# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]   
    paths-ignore: ["**/*.txt","**/*.md", "LICENSE", "**/*.xmind", "**/*.doc", "**/*.docx", "**/*.yml", "**/*.ymal"]
  

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest    

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:      
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      #- name: clean
      #  run: dotnet clean
      
      #- name: Install dependencies
      #  run: dotnet restore

      #- name: build
      #  run: dotnet msbuild >> log.txt
      
      #- name: notify build failure
      #  uses: tokorom/action-slack-incoming-webhook@main
      #  env:
      #       INCOMING_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      #  with:
      #       text: "build failte, pleace check code, build log url: https://github.com/leon-project-dev/Demo/suites/7073840480/artifacts/279264187"
      #  if: failure()
        
      #- uses: actions/upload-artifact@v3
      #  with:
      #      name: log
      #      path: log.txt
      #  if: always()
      
      - name: publish
        run: dotnet publish -c Release -o pub\
      
      - name: 9. ´´½¨GitHub Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.0.1
          release_name: v1.0.1
          body: demo
          draft: false
          prerelease: false

      #- uses: actions/upload-artifact@v3
      #  with:
      #      name: package
      #      path: pub\

      ## zip
      #- name: zip 
      #  run: Compress-Archive -Path .\pub 'pub.zip'
        
      # TODO:Deploy  
      #- name: delpoy server


      #- name: notify success
      #  uses: tokorom/action-slack-incoming-webhook@main
      #  env:
      #       INCOMING_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      #  with:
      #       text: "${{github.actor}} build success, pack url: http://www.baidu.com"
      #       block: 
      #         -
      #          - type: header
      #          -text:
      #               - 
                 
             
       

            # blocks: |
            # [
            #  {
            #    "type": "header",
            #    "text": {
            #      "type": "plain_text",
            #      "text": "${{ github.event.release.tag_name}} is published!"
            #    }
            #  },
            #  {
            #    "type": "section",
            #    "text": {
            #      "type": "mrkdwn",
            #      "text": "*Author:*\n${{ github.actor }}"
            #    }
            #  },
            #   {
            #    "type": "section",
            #    "text": {
            #      "type": "mrkdwn",
            #      "text": "*Information:*"
            #    }
            #  },
            #  {
            #    "type": "section",
            #    "text": {
            #      "type": "mrkdwn",
            #      "text": ${{ toJSON(github.event.release.body) }}
            #    }
            #  },
            #  {
            #    "type": "section",
            #    "text": {
            #      "type": "mrkdwn",
            #      "text": "${{ github.event.release.html_url }}"
            #    }
            #  }
            #]
     
      
      
      
